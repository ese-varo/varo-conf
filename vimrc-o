" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" My plugins
" System  
Plugin 'scrooloose/nerdtree'
" Plugin 'Shougo/neocomplete.vim'
Plugin 'junegunn/fzf.vim'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'ycm-core/YouCompleteMe'

" Ruby and Rails  
Plugin 'vim-ruby/vim-ruby'
Plugin 'tpope/vim-rails'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-endwise'
Plugin 'tpope/vim-commentary'
" Plugin 'shougo/deoplete.nvim'
" Plugin 'tpope/vim-rake'

" Git 
Plugin 'tpope/vim-fugitive'
"Plugin 'Xuyuanp/nerdtree-git-plugin'

"Plugin 'tpope/vim-bundler'
"Plugin 'tpope/vim-projectionist'
"Plugin 'jlanzarotta/bufexplorer'
"Plugin 'mattn/emmet-vim'

" All of your Plugins must be added before the following line
" Brief help
" :PluginList          - list configured plugins
" :PluginInstall(!)    - install (update) plugins
" :PluginSearch(!) foo - search (or refresh cache first) for foo
" :PluginClean(!)      - confirm (or auto-approve) removal of unused plugins
call vundle#end()            " required
" see :h vundle for more details or wiki for FAQ

" You complete me 
let g:ycm_language_server = [
  \   {
  \     'name': 'ruby',
  \     'cmdline': [ expand( '$HOME/varo/development/lsp/ruby/bin/solargraph' ), 'stdio' ],
  \     'filetypes': [ 'ruby' ],
  \   }
  \ ]

" vim airline 
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#formatter = 'default'
"let g:airline#extensions#tabline#buffer_nr_show = 1
let g:airline_theme='minimalist' "papercolor powerlineish fruit_punch

" NERDTree config
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | endif
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

map <F2> :NERDTreeToggle<CR>
map <leader>r :NERDTreeFind<cr>      " this is the key to jump to the nerdtree

" FZF settings 
nnoremap <silent> <C-z> :FZF<CR>

" deoplete config
" let g:deoplete#enable_at_startup = 1

" Put your non-Plugin stuff after this line

" resize split windows
nnoremap <leader>h :exe "vertical resize -3"<CR>
nnoremap <leader>l :exe "vertical resize +3"<CR>
nnoremap <leader>j :exe "resize -3"<CR>
nnoremap <leader>k :exe "resize +3"<CR>

" reasign <leader> to ' ' blank space key
let mapleader = ' '
filetype on
filetype indent on
filetype plugin indent on    " required
filetype plugin on

set omnifunc=syntaxcomplete#Complete
set expandtab tabstop=2 shiftwidth=2
set number 
syntax on

